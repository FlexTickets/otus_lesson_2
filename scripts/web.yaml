---
- name: Set up test web server
  hosts: all
  tasks:
    - name: Do root works
      block:
        - name: Wait for cloud-inint complition
          ansible.builtin.script: "{{ work_dir }}/{{ wait_script }}"

        - name: Update apt-get repo and cache
          ansible.builtin.apt:
            update_cache=yes force_apt_get=yes cache_valid_time=3600

        - name: Remove Apache
          ansible.builtin.apt:
            pkg:
              - apache2
              - apache2-bin
              - apache2-data
              - apache2-utils
              - libapache2-mod-php8.1
            state: absent

        - name: Install packages
          ansible.builtin.apt:
            pkg:
              - php
              - php-fpm
              - php-mysql

        - name: Install NGINX
          ansible.builtin.include_role:
            name: nginxinc.nginx
          vars:
            nginx_branch: stable

        - name: Create directories for vhost configs and ssl
          ansible.builtin.file:
            path: /etc/nginx/{{ item.dir }}
            state: directory
            modification_time: preserve
            access_time: preserve
          loop:
            - dir: sites-available
            - dir: sites-enabled

        - name: Create directory for site
          ansible.builtin.file:
            path: /var/www/tetris
            state: directory
            owner: "{{ php_user }}"
            group: "{{ php_user }}"
            mode: '0750'
            modification_time: preserve
            access_time: preserve

        - name: Change a vhost configs directory location
          ansible.builtin.replace:
            path: /etc/nginx/nginx.conf
            regexp: '^.*\/etc\/nginx\/conf\.d\/\*\.conf.*'
            replace: '    include /etc/nginx/sites-enabled/*.conf;'
          
        - name: Change user for running nginx
          ansible.builtin.replace:
            path: /etc/nginx/nginx.conf
            regexp: '^.*user[ ]+nginx;.*'
            replace: 'user {{ php_user }};'

        - name: Copy default.conf
          ansible.builtin.copy:
            src: "{{ work_dir }}/{{ nginx_default }}"
            dest: /etc/nginx/sites-available/default.conf

        - name: Create symlink for default.config
          ansible.builtin.file:
            src: /etc/nginx/sites-available/default.conf
            dest: /etc/nginx/sites-enabled/default.conf
            state: link
            modification_time: preserve
            access_time: preserve

        - name: Copy site
          ansible.builtin.copy:
            src: "{{ work_dir }}/configs/index.php"
            dest: /var/www/tetris/index.php
            owner: "{{ php_user }}"
            group: "{{ php_user }}"

        - name: Restart nginx.conf
          ansible.builtin.service:
            name: nginx
            state: restarted
      when: ansible_facts['distribution'] == 'Ubuntu'
      become: true
      become_method: sudo
      become_user: root
